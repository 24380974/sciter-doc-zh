<HTML>
  <HEAD>
    <META http-equiv="Content-Type" content="text/html; charset=utf-8">
    <META name="GENERATOR" content="BLOCKNOTE.NET">
    <META name="source" content="http://www.w3.org/TR/CSS21/selector.html">
    <BASEFONT face="Verdana" size="2">
    <TITLE>+Selectors in HTMLayout</TITLE><STYLE>BODY { FONT-FAMILY:Verdana; FONT-SIZE:10pt }
P { FONT-FAMILY:Verdana; FONT-SIZE:10pt }
DIV { FONT-FAMILY:Verdana; FONT-SIZE:10pt }
TD { FONT-FAMILY:Verdana; FONT-SIZE:10pt }
</STYLE>
  </HEAD>
<BODY>
<h2>Sciter支持的CSS选择器</h2>
<TABLE border="1">
  <TR>
    <TD>&nbsp;</TD>
    <TD><STRONG>含义</STRONG></TD>
    <TD><STRONG>节中描述</STRONG></TD>
  </TR>
  <TR>
    <TD colspan="3"><STRONG>CSS 2.1 选择器 </STRONG>下面的内容取自<A href="http://www.w3.org/TR/CSS21/selector.html#q2">W3C CSS 2.1 规范</A></TD>
  </TR>
  <TR>
    <TD><EM>*</EM></TD>
    <TD>匹配任何元素</TD>
    <TD><A href="#universal-selector">通用选择器</A></TD>
  </TR>
  <TR>
    <TD><EM>E</EM></TD>
    <TD>匹配所有使用E标签的元素</TD>
    <TD><A href="#type-selectors">标签选择器</A></TD>
  </TR>
  <TR>
    <TD><EM>E F</EM></TD>
    <TD>匹配所有属于E元素后代的F元素，E和F之间用空格分隔</TD>
    <TD><A href="#descendant-selectors">后代元素选择器</A></TD>
  </TR>
  <TR>
    <TD><EM>E &gt; F</EM></TD>
    <TD>匹配所有E元素的子元素F</TD>
    <TD><A href="#child-selectors">子元素选择器</A></TD>
  </TR>
  <TR>
    <TD><EM>E:first-child</EM></TD>
    <TD>匹配元素E，E是它的父元素的第一个子元素</TD>
    <TD><A href="#first-child">:first-child伪类</A></TD>
  </TR>
  <TR>
    <TD><EM>E:link<BR>E:visited</EM></TD>
    <TD>匹配元素E，E是一个链接元素，它未被访问(:link)或已被访问(:visited)。</TD>
    <TD><A href="#link-pseudo-classes">:link伪类</A></TD>
  </TR>
  <TR>
    <TD><EM>E:active</EM></TD>
    <TD>匹配鼠标已经其上按下、还没有释放的E元素</TD>
    <TD><A href="#dynamic-pseudo-classes">动态伪类</A></TD>
  </TR>
  <TR>
    <TD><EM>E:hover</EM></TD>
    <TD>匹配鼠标悬停其上的E元素</TD>
    <TD><A href="#dynamic-pseudo-classes">动态伪类</A></TD>
  </TR>
  <TR>
    <TD><EM>E:focus</EM></TD>
    <TD>匹配获得当前焦点的E元素</TD>
    <TD><A href="#dynamic-pseudo-classes">动态伪类</A></TD>
  </TR>
  <TR>
    <TD><EM>E + F</EM></TD>
    <TD>匹配所有紧随E元素之后的同级元素F</TD>
    <TD><A href="#adjacent-selectors">毗邻元素选择器</A></TD>
  </TR>
  <TR>
    <TD><EM>E[foo]</EM></TD>
    <TD>匹配所有具有foo属性的E元素，不考虑它的值。</TD>
    <TD><A href="#attribute-selectors">属性选择器</A></TD>
  </TR>
  <TR>
    <TD><EM>E[foo=&quot;warning&quot;]</EM></TD>
    <TD>匹配所有foo属性等于&quot;warning&quot;的E元素。</TD>
    <TD><A href="#attribute-selectors">属性选择器</A></TD>
  </TR>
  <TR>
    <TD><EM>E[foo~=&quot;warning&quot;]</EM></TD>
    <TD>匹配所有foo属性具有多个空格分隔的值，其中一个值等于&quot;warning&quot;的E元素。</TD>
    <TD><A href="#attribute-selectors">属性选择器</A></TD>
  </TR>
  <TR>
    <TD><EM>E[foo%=&quot;warning&quot;]</EM></TD>
    <TD>匹配所有foo属性具有多个空格分隔的值，其中一个值等于&quot;warning&quot;的E元素，其中值是大小写敏感的。</TD>
    <TD>非标准</TD>
  </TR>
  <TR>
    <TD><EM>E[lang|=&quot;en&quot;]</EM></TD>
    <TD>匹配这类E元素，它具有lang属性，且它的值是&quot;en&quot;或者以&quot;en&quot;开始并立即跟上一个“-”字符，也就是&quot;en-&quot;, 主要用于lang属性,比如“en”、“en-us”、“en-gb”等等</TD>
    <TD><A href="#attribute-selectors">属性选择器</A></TD>
  </TR>
  <TR>
    <TD><EM>DIV.warning</EM></TD>
    <TD>匹配所有class属性中包含&quot;warning&quot;的DIV元素 (在HTML中, 等同于[class~=&quot;warning&quot;]。)</TD>
    <TD><A href="#class-html">类选择器</A></TD>
  </TR>
  <TR>
    <TD><EM>E#myid</EM></TD>
    <TD>匹配所有id属性等于&quot;myid&quot;的E元素。</TD>
    <TD><A href="#id-selectors">ID选择器</A></TD>
  </TR>
  <TR>
    <TD colspan="3"><STRONG>CSS 3.0 选择器</STRONG></TD>
  </TR>
  <TR>
    <TD><EM>E:not( {simple selector} )</EM></TD>
    <TD>
<DIV>匹配不符合当前选择器的任何E标签元素</DIV>
<DIV>示例: E:not(:first-child)匹配非它父元素的第一个子元素的所有元素。</DIV></TD>
    <TD><A href="http://www.w3.org/TR/css3-selectors/#negation">否定伪类</A></TD>
  </TR>
  <TR>
    <TD><EM>E[foo^=&quot;val&quot;]</EM></TD>
    <TD>匹配所有foo属性值是以&quot;val&quot;开始的E元素</TD>
    <TD>&nbsp;</TD>
  </TR>
  <TR>
    <TD>E[foo$=&quot;val&quot;]</TD>
    <TD>匹配所有foo属性值是以&quot;val&quot;结尾的E元素</TD>
    <TD>&nbsp;</TD>
  </TR>
  <TR>
    <TD><EM>E[foo*=&quot;val&quot;]</EM></TD>
    <TD>匹配所有foo属性值包含有&quot;val&quot;的E元素</TD>
    <TD>&nbsp;</TD>
  </TR>
  <TR>
    <TD><EM>E:nth-child(An+B)</EM></TD>
    <TD>匹配E元素，它是将它父元素的所有子元素按<EM>A</EM>个元素分组后的每组中的第<EM>B</EM>个元素。A和B都是整数。</TD>
    <TD rowspan="2"><A href="http://www.w3.org/TR/2001/CR-css3-selectors-20011113/#structural-pseudos">结构伪类选择器</A></TD>
  </TR>
  <TR>
    <TD><EM>E:nth-last-child(An+B)</EM></TD>
    <TD>匹配E元素，它是将它父元素的所有子元素按<EM>A</EM>个元素分组后的每组中从后往前数第<EM>B</EM>个元素。A和B都是整数。</TD>
  </TR>
  <TR>
    <TD><EM>E:not(simple selector)</EM></TD>
    <TD>匹配不符合当前选择器的任何E标签元素</TD>
    <TD><A href="http://www.w3.org/TR/css3-selectors/#negation">否定伪类</A></TD>
  </TR>
  <TR>
    <TD><EM>E:only-child</EM></TD>
    <TD>匹配父元素下仅有的一个子元素，等同于E:first-child:last-child或者E:nth-child(1):nth-last-child(1)。 </TD>
    <TD><A href="#only-child-pseudo">:only-child伪类</A></TD>
  </TR>
  <TR>
    <TD><EM>E:only-of-type</EM></TD>
    <TD>匹配父元素下使用相同标签的唯一一个子元素，等同于E:first-of-type:last-of-type或者E:nth-of-type(1):nth-last-of-type(1)</TD>
    <TD><A href="#only-of-type-pseudo">:only-of-type伪类</A></TD>
  </TR>
  <TR>
    <TD><EM>E:has-child-of-type(T)</EM></TD>
    <TD>匹配E元素，它仅有一个T类型的子元素。</TD>
    <TD rowspan="2"><FONT color=#cc0000>非标准, h-smile独有</FONT></TD>
  </TR>
  <TR>
    <TD><EM>E:has-children-of-type(T)</EM></TD>
    <TD>匹配E元素，它有一个或多个T类型的子元素。</TD>
  </TR>
  <TR>
    <TD colspan="3"><STRONG>运行时状态标志(大部分都是h-smile独有的)</STRONG></TD>
  </TR>
  <TR>
    <TD nowrap valign="top"><STRONG><EM>E:focus</EM></STRONG></TD>
    <TD valign="middle">匹配处于 聚焦 状态的元素</TD>
    <TD valign="middle">STATE_FOCUS</TD>
  </TR>
  <TR>
    <TD nowrap valign="top"><STRONG><EM>E:tab-focus</EM></STRONG></TD>
    <TD valign="middle">匹配使用TAB键获得焦点的元素</TD>
    <TD valign="middle">STATE_TABFOCUS</TD>
  </TR>
  <TR>
    <TD nowrap valign="top"><STRONG><EM>E:focusable</EM></STRONG></TD>
    <TD valign="middle">匹配任何定义了tabindex属性或可聚焦的元素。附加到元素上的行为(Behavior)可以处理&quot;聚焦&quot;事件(HANDLE_FOCUS)。例如，默认情况下，&lt;a href&gt;元素和大多数&lt;input&gt;/&lt;widget&gt;元素是可聚焦的。拥有 overflow:auto|scroll的元素本质上也是可聚焦的。</TD>
    <TD valign="middle">STATE_FOCUSABLE</TD>
  </TR>
  <TR>
    <TD nowrap valign="top"><STRONG><EM>E:current</EM></STRONG></TD>
    <TD valign="middle">匹配当前E元素。如&lt;select&gt;中的当前&lt;option&gt;。</TD>
    <TD valign="middle">STATE_CURRENT</TD>
  </TR>
  <TR>
    <TD nowrap valign="top"><STRONG><EM>E:checked</EM></STRONG></TD>
    <TD valign="middle">匹配处于选择(:checked)状态的E元素。<EM>checkbox</EM>、<EM>radio</EM>、<EM>select</EM>(针对option)这些元素的内部行为会自动切换这个状态。</TD>
    <TD valign="middle">STATE_CHECKED</TD>
  </TR>
  <TR>
    <TD nowrap valign="top"><STRONG><EM>E:disabled</EM></STRONG></TD>
    <TD valign="middle">匹配处于禁用状态的E元素。容器中所有有<EM>disabled</EM>属性的元素都会有该状态标志。</TD>
    <TD valign="middle">STATE_DISABLED</TD>
  </TR>
  <TR>
    <TD nowrap valign="top"><STRONG><EM>E:read-only</EM></STRONG></TD>
    <TD valign="middle">匹配处于只读状态(定义了readonly属性)的E元素。</TD>
    <TD valign="middle">STATE_READONLY</TD>
  </TR>
  <TR>
    <TD nowrap valign="top"><STRONG><EM>E:expanded</EM></STRONG></TD>
    <TD valign="middle">匹配处于展开(expanded)状态的E元素。<EM>select</EM>元素的内部行为会切换该状态标志。该状态用于&lt;select&gt;中的折叠节点。</TD>
    <TD>STATE_EXPANDED</TD>
  </TR>
  <TR>
    <TD nowrap valign="top"><STRONG><EM>E:collapsed</EM></STRONG></TD>
    <TD valign="middle">与<STRONG>:expanded</STRONG>状态刚好相反，匹配处于折叠(collapsed)状态的E元素。元素可以处于展开(expanded)或折叠(collapsed)状态，但不能同时处于这两只状态。 </TD>
    <TD>STATE_COLLAPSED</TD>
  </TR>
  <TR>
    <TD nowrap valign="top"><STRONG><EM>E:incomplete</EM></STRONG></TD>
    <TD valign="middle">匹配处于未完成(incomplete)状态的E元素。未完成状态一般是指一个请求资源(如前景或背景图片)尚未加载完成时。</TD>
    <TD valign="middle">STATE_INCOMPLETE</TD>
  </TR>
  <TR>
    <TD nowrap valign="top"><STRONG><EM>E:busy</EM></STRONG></TD>
    <TD valign="middle">匹配处于忙(busy)状态的E元素。该状态一般是指元素请求下载一些数据，而数据还没到达时的状态。该状态可以在行为(behavior)的代码中设置。</TD>
    <TD valign="middle">STATE_BUSY</TD>
  </TR>
  <TR>
    <TD nowrap valign="top"><STRONG><EM>E:empty</EM></STRONG></TD>
    <TD valign="middle">匹配没有文本内容和子元素的E元素。</TD>
    <TD valign="middle">STATE_EMPTY</TD>
  </TR>
  <TR>
    <TD nowrap valign="top"><STRONG><EM>E:has-child</EM></STRONG></TD>
    <TD valign="middle">匹配只有一个子元素的E元素。</TD>
    <TD valign="middle">STATE_HAS_CHILD</TD>
  </TR>
  <TR>
    <TD nowrap valign="top"><STRONG><EM>E:has-children</EM></STRONG></TD>
    <TD valign="middle">匹配有一个或多个子元素的E元素。</TD>
    <TD valign="middle">STATE_HAS_CHILDREN</TD>
  </TR>
  <TR>
    <TD nowrap valign="top"><STRONG><EM>E:animating</EM></STRONG></TD>
    <TD valign="middle">匹配当前处于展示动画中的E元素，如展开/折叠中。</TD>
    <TD valign="middle">STATE_ANIMATING</TD>
  </TR>
  <TR>
    <TD nowrap valign="top"><STRONG><EM>E:popup</EM></STRONG></TD>
    <TD valign="middle">匹配当前作为弹出窗口显示的E元素。</TD>
    <TD valign="middle">STATE_POPUP</TD>
  </TR>
  <TR>
    <TD nowrap valign="top"><STRONG><EM>E:owns-popup</EM></STRONG></TD>
    <TD valign="middle">匹配请求显示弹出窗口，并且当前弹出窗口已经弹出的E元素。即E元素是弹出窗口的拥有者。</TD>
    <TD valign="middle">STATE_OWNS_POPUP</TD>
  </TR>
  <TR>
    <TD nowrap valign="top"><STRONG><EM>E:synthetic</EM></STRONG></TD>
    <TD valign="middle">匹配由引擎合成的E元素。如表格(&lt;table&gt;)中所有缺失的单元格拥有该状态。</TD>
    <TD valign="middle">STATE_SYNTHETIC</TD>
  </TR>
  <TR>
    <TD nowrap valign="top"><STRONG><EM>E:drop-target</EM></STRONG></TD>
    <TD valign="middle">匹配E元素，当拖拽操作正在进行中，E为被拖拽元素的有效目标元素。</TD>
    <TD valign="middle">STATE_DROP_TARGET</TD>
  </TR>
  <TR>
    <TD nowrap valign="top"><STRONG><EM>E:drag-over</EM></STRONG></TD>
    <TD valign="middle">匹配拖拽目标E元素, 被拖拽元素经过E。</TD>
    <TD valign="middle">STATE_DRAG_OVER</TD>
  </TR>
  <TR>
    <TD nowrap valign="top"><STRONG><EM>E:moving</EM></STRONG></TD>
    <TD valign="middle">匹配正在拖拽移动(drag-moving)的E元素(拖拽源的临时副本)。</TD>
    <TD valign="middle">STATE_MOVING</TD>
  </TR>
  <TR>
    <TD nowrap valign="top"><STRONG><EM>E:copying</EM></STRONG></TD>
    <TD valign="middle">匹配拖拽拷贝(drag-copying)的E元素(拖拽源的临时副本)。</TD>
    <TD valign="middle">STATE_COPYING</TD>
  </TR>
  <TR>
    <TD nowrap valign="top"><STRONG><EM>E:drag-source</EM></STRONG></TD>
    <TD valign="middle">匹配拖拽源的E元素，当前处于拖拽操作中。</TD>
    <TD valign="middle">STATE_DRAG_SOURCE</TD>
  </TR>
  <TR>
    <TD nowrap valign="top"><STRONG><EM>E:rtl</EM></STRONG></TD>
    <TD valign="middle">匹配E元素，E元素处于从右到左的环境中——当它或离它最近的容器元素定义了<EM>dir</EM>属性，且该属性值为&quot;rtl&quot;。</TD>
    <TD valign="middle">&nbsp;</TD>
  </TR>
  <TR>
    <TD nowrap valign="top"><STRONG><EM>E:ltr</EM></STRONG></TD>
    <TD valign="middle">匹配E元素，E元素处于从左到右的环境中当它或离它最近的容器元素定义了<EM>dir</EM>属性，且该属性值为&quot;ltr&quot;。</TD>
    <TD valign="middle">&nbsp;</TD>
  </TR>
  <TR>
    <TD nowrap valign="top"><STRONG><EM>E:ready</EM></STRONG></TD>
    <TD valign="middle">当文档的DOM树初始化完成时，E元素处于该状态。</TD>
    <TD valign="middle">&nbsp;</TD>
  </TR>
  <TR>
    <TD nowrap valign="top"><STRONG><EM>E:invalid</EM></STRONG></TD>
    <TD valign="middle">当E元素处于失效状态时，E元素处于该状态，比如输入框中的字符长度超出限制的长度时就处于这个状态。</TD>
    <TD valign="middle">&nbsp;</TD>
  </TR>
  <TR>
    <TD nowrap valign="top"><STRONG><EM>E:lang(en)</EM></STRONG></TD>
    <TD valign="middle">当前语言是英语(en)时(根html元素的lang属性值为"en")，E元素处于该状态。</TD>
    <TD valign="middle">&nbsp;</TD>
  </TR>
  <TR>
    <TD nowrap valign="top"><STRONG><EM>E:has-bound-attributes</EM></STRONG></TD>
    <TD valign="middle">当E元素至少有一个bound属性(属性名以'@'作为前缀)时，E元素处于该状态。</TD>
    <TD valign="middle">&nbsp;</TD>
  </TR>
</TABLE>
</BODY>
</HTML>